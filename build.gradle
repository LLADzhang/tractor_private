buildscript {
    repositories {
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "com.moowork.node"
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compileOnly "org.projectlombok:lombok:1.18.12"
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation "io.dropwizard:dropwizard-assets:1.2.1"
    implementation "javax.activation:activation:1.1.1"
    implementation "javax.xml.bind:jaxb-api:2.2.11"
    implementation "org.atmosphere:atmosphere-runtime:2.5.13"
    implementation "org.eclipse.jetty.websocket:websocket-server:9.4.27.v20200227"

    testImplementation "junit:junit:4.12"
    testImplementation "org.assertj:assertj-core:3.11.0"
}

task run(type: JavaExec) {
    classpath project.sourceSets.main.runtimeClasspath
    main "io.github.ytung.tractor.TractorServer"
}

task stage(dependsOn: ['build', 'clean', 'shadowJar'])
build.mustRunAfter clean
shadowJar.mustRunAfter build

npm_run_build {
    inputs.files fileTree('js')

    inputs.file 'package.json'
    inputs.file 'package-lock.json'

    outputs.dir 'src/main/resources/assets'
}

node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */
    // Version of node to use.
    version = '12.16.2'
    // Version of npm to use.
    npmVersion = '6.14.4'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = false
}

assemble.dependsOn npm_run_build

shadowJar {
    mergeServiceFiles()
    manifest {
        attributes (
            'Main-Class': "io.github.ytung.tractor.TractorServer"
        )
    }
}